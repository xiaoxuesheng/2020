HTTP2.0
1.多路复用
多路复用允许单一的 HTTP/2 连接同时发起多重的请求-响应消息。
具体通过二进制分帧层在应用层(HTTP/2)和传输层(TCP or UDP)之间：数据拆成包，给每个包打上标签。这样到了服务器，服务器根据标签区分开来
多路复用技术：单连接多资源的方式，减少服务端的链接压力,内存占用更少,连接吞吐量更大;由于减少TCP 慢启动时间，提高传输的速度。
2.首部压缩
HTTP/1 中，HTTP 请求和响应都是由「状态行、请求 / 响应头部、消息主体」三部分组成。一般而言，消息主体都会经过 gzip 压缩，或者本身传输的就是压缩过后的二进制文件(例如图片、音频)，但状态行和头部却没有经过任何压缩，直接以纯文本传输。
HTTP/2压缩的原理头部压缩需要在支持 HTTP/2 的浏览器和服务端之间满足：
维护一份相同的静态字典(Static Table)，包含常见的头部名称，以及特别常见的头部名称与值的组合;
维护一份相同的动态字典(Dynamic Table)，可以动态的添加内容;
支持基于静态哈夫曼码表的哈夫曼编码(Huffman Coding);
3.支持服务器推送
一个服务器经常知道一个页面需要很多附加资源，在它响应浏览器第一个请求的时候，可以开始推送这些资源。