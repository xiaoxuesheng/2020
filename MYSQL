MYSQL性能优化
1.时间存储datetime、timestamp、bigint比较
在InnoDB存储引擎下，通过时间范围查找，性能bigint > datetime > timestamp
在InnoDB存储引擎下，通过时间排序，性能bigint > timestamp > datetime
如果需要对时间字段进行操作(如通过时间范围查找或者排序等)，推荐使用bigint，如果时间字段不需要进行任何操作，推荐使用timestamp，使用4个字节保存比较节省空间，但是只能记录到2038年记录的时间有限
2.查询是否存在
不用select count(*) ...;
用 select 1 ... limit 1;

MYSQL 特性
8.0.0
1.默认字符集由latin1变为utf8mb4
2.支持降序索引
3.group by 不再隐式排序
4.json特性增强
5.innodb select for update跳过锁等待
select ... for update，select ... for share(8.0新增语法) 添加 NOWAIT、SKIP LOCKED语法，跳过锁等待，或者跳过锁定。
在5.7及之前的版本，select...for update，如果获取不到锁，会一直等待，直到innodb_lock_wait_timeout超时。
6.支持窗口函数（over）和公用表表达式（with）

8.0.20
1.hash join ：缓存join数据，速度快



